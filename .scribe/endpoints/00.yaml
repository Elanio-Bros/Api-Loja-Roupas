name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/usuarios
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '"Invalid Token"'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/usuarioToken
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"senha":["Faltando campo senha"],"email":["Faltando campo email"]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/criarUsuario
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: ''
        required: true
        example: et
        type: string
      senha:
        name: senha
        description: ''
        required: true
        example: mollitia
        type: string
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: karli.tremblay@example.com
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: api/Usuario/delete
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/Usuario/delete/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: qui
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/usuarios/{idUser}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idUser:
        name: idUser
        description: ''
        required: true
        example: adipisci
        type: string
    queryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: ''
        required: true
        example: quia
        type: string
      senha:
        name: senha
        description: ''
        required: true
        example: similique
        type: string
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: johanna50@example.org
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - PATCH
    uri: 'api/usuarios/{idUser}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idUser:
        name: idUser
        description: ''
        required: true
        example: ut
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/historico
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '"Invalid Token"'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/produtos
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '"Invalid Token"'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/produto/create
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/fotos/upload/{idProduto}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idProduto:
        name: idProduto
        description: ''
        required: true
        example: sint
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/fotos/update/all/{idProduto}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idProduto:
        name: idProduto
        description: ''
        required: true
        example: occaecati
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/fotos/update/{idProduto}/{idImagem}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idProduto:
        name: idProduto
        description: ''
        required: true
        example: corrupti
        type: string
      idImagem:
        name: idImagem
        description: ''
        required: true
        example: dolores
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/produtos/{idProduto}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idProduto:
        name: idProduto
        description: ''
        required: true
        example: fugiat
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PATCH
    uri: 'api/produtos/{idProduto}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idProduto:
        name: idProduto
        description: ''
        required: true
        example: et
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/produtos/delete/{idProduto}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idProduto:
        name: idProduto
        description: ''
        required: true
        example: non
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/foto/delete/all/{idProduto}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idProduto:
        name: idProduto
        description: ''
        required: true
        example: rerum
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/foto/delete/{idProduto}/{idFoto}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      idProduto:
        name: idProduto
        description: ''
        required: true
        example: quis
        type: string
      idFoto:
        name: idFoto
        description: ''
        required: true
        example: voluptas
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
